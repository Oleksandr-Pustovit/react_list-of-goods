{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","wordLengthFromServer","App","state","isStarted","isReversed","sortType","NONE","minLength","handleSelectChange","event","setState","target","value","this","visibleGoods","goods","filter","good","length","sort","good1","good2","ALPABET","localeCompare","LENGTH","Error","reverse","getReorderedGoods","wordLengths","className","Button","variant","type","onClick","handleSort","handleReverse","color","handleReset","FormControl","fullWidth","InputLabel","id","Select","labelId","label","onChange","map","MenuItem","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAsCKA,E,qIA1BCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAuB,CAC3B,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,K,SAGGF,K,YAAAA,E,iBAAAA,E,iBAAAA,M,KA4CE,IAAMG,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUP,EAASQ,KACnBC,UAAW,GALf,EAwBEC,mBAAqB,SAACC,GACpB,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAAOC,SAzB7C,gDAQE,SAAWP,GACTQ,KAAKH,SAAS,CAAEL,eATpB,2BAYE,WACEQ,KAAKH,UAAS,SAAAR,GAAK,MAAK,CAAEE,YAAaF,EAAME,iBAbjD,yBAgBE,WACES,KAAKH,SAAS,CACZL,SAAUP,EAASQ,KACnBF,YAAY,EACZG,UAAW,MApBjB,oBA4BE,WAAU,IAAD,OACP,EAKIM,KAAKX,MAJPC,EADF,EACEA,UACAC,EAFF,EAEEA,WACAC,EAHF,EAGEA,SACAE,EAJF,EAIEA,UAGIO,EA1EV,SACEC,EACAV,EACAD,EACAG,GAEA,IAAMO,EAAe,YAAIC,GAAOC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUX,KAsB9D,OApBAO,EAAaK,MAAK,SAACC,EAAOC,GACxB,OAAQhB,GACN,KAAKP,EAASQ,KACZ,OAAO,EAET,KAAKR,EAASwB,QACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKvB,EAAS0B,OACZ,OAAOJ,EAAMF,OAASG,EAAMH,OAE9B,QACE,MAAM,IAAIO,MAAM,uDAIlBrB,GACFU,EAAaY,UAGRZ,EA8CgBa,CACnB5B,EACAM,EACAD,EACAG,GAGIqB,EAAW,UAAO5B,GAExB,OACE,qBAAK6B,UAAU,MAAf,SACI1B,EAYA,qCACE,sBAAK0B,UAAU,iBAAf,UACE,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,KAAK,SACLH,UAAU,eACVI,QAAS,kBAAM,EAAKC,WAAWpC,EAASwB,UAJ1C,iCAQA,cAACQ,EAAA,EAAD,CACEC,QAAQ,WACRC,KAAK,SACLH,UAAU,eACVI,QAAS,kBAAM,EAAKC,WAAWpC,EAAS0B,SAJ1C,4BAQA,cAACM,EAAA,EAAD,CACEC,QAAQ,WACRC,KAAK,SACLH,UAAU,eACVI,QAAS,kBAAM,EAAKE,iBAJtB,qBAQA,cAACL,EAAA,EAAD,CACEC,QAAQ,WACRK,MAAM,QACNJ,KAAK,SACLH,UAAU,eACVI,QAAS,kBAAM,EAAKI,eALtB,sBAWF,qBAAKR,UAAU,mBAAf,SACE,eAACS,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,cAACC,EAAA,EAAD,CAAYC,GAAG,sBAAf,wBACA,cAACC,EAAA,EAAD,CACEC,QAAQ,sBACRF,GAAG,gBACH7B,MAAOL,EACPqC,MAAM,MACNC,SAAU,SAAApC,GAAK,OAAI,EAAKD,mBAAmBC,IAL7C,SAOGmB,EAAYkB,KAAI,SAAA5B,GAAM,OACrB,cAAC6B,EAAA,EAAD,CAAUnC,MAAOM,EAAjB,SAA0BA,cAMlC,oBAAIW,UAAU,QAAd,SACGf,EAAagC,KAAK,SAAA7B,GAAI,OACrB,oBACEY,UAAU,cADZ,SAIGZ,GAFIA,WArEb,qBAAKY,UAAU,0BAAf,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,WACRC,KAAK,SACLH,UAAU,eACVI,QAAS,kBAAM,EAAKvB,SAAS,CAAEP,WAAW,KAJ5C,2BAjDZ,GAAyB6C,IAAMC,WC/E/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4d300b6f.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n} from '@mui/material';\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst wordLengthFromServer = [\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPABET = 'string',\n  LENGTH = 'number',\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n  minLength: number,\n) {\n  const visibleGoods = [...goods].filter(good => good.length >= minLength);\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.NONE:\n        return 0;\n\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        throw new Error('unknown sort type in getReorderedGoods function');\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n  minLength: number,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n    minLength: 1,\n  };\n\n  handleSort(sortType: SortType) {\n    this.setState({ sortType });\n  }\n\n  handleReverse() {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  }\n\n  handleReset() {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n      minLength: 1,\n    });\n  }\n\n  handleSelectChange = (event: SelectChangeEvent<number>) => {\n    this.setState({ minLength: +event.target.value });\n  };\n\n  render() {\n    const {\n      isStarted,\n      isReversed,\n      sortType,\n      minLength,\n    } = this.state;\n\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      sortType,\n      isReversed,\n      minLength,\n    );\n\n    const wordLengths = [...wordLengthFromServer];\n\n    return (\n      <div className=\"App\">\n        {!isStarted ? (\n          <div className=\"start-button__container\">\n            <Button\n              variant=\"outlined\"\n              type=\"button\"\n              className=\"start-button\"\n              onClick={() => this.setState({ isStarted: true })}\n            >\n              Start\n            </Button>\n          </div>\n        ) : (\n          <>\n            <div className=\"menu__controls\">\n              <Button\n                variant=\"outlined\"\n                type=\"button\"\n                className=\"menu__button\"\n                onClick={() => this.handleSort(SortType.ALPABET)}\n              >\n                Sort alphabetically\n              </Button>\n              <Button\n                variant=\"outlined\"\n                type=\"button\"\n                className=\"menu__button\"\n                onClick={() => this.handleSort(SortType.LENGTH)}\n              >\n                Sort by length\n              </Button>\n              <Button\n                variant=\"outlined\"\n                type=\"button\"\n                className=\"menu__button\"\n                onClick={() => this.handleReverse()}\n              >\n                Reverse\n              </Button>\n              <Button\n                variant=\"outlined\"\n                color=\"error\"\n                type=\"button\"\n                className=\"menu__button\"\n                onClick={() => this.handleReset()}\n              >\n                Reset\n              </Button>\n            </div>\n\n            <div className=\"select-container\">\n              <FormControl fullWidth>\n                <InputLabel id=\"length-select-label\">Min length</InputLabel>\n                <Select\n                  labelId=\"length-select-label\"\n                  id=\"length-select\"\n                  value={minLength}\n                  label=\"Age\"\n                  onChange={event => this.handleSelectChange(event)}\n                >\n                  {wordLengths.map(length => (\n                    <MenuItem value={length}>{length}</MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </div>\n\n            <ul className=\"Goods\">\n              {visibleGoods.map((good => (\n                <li\n                  className=\"Goods__item\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              )))}\n            </ul>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}